{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","src","alt","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElement","dialogs","map","d","key","messagesElement","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,8FCcpMC,EAXI,SAACC,GAChB,IAAIC,EAAO,YAAaD,EAAME,GAC9B,OACA,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAIN,GACT,yBAAKO,IAAI,uFAAuFC,IAAI,KACnGT,EAAMU,QCIJC,EATC,SAACX,GACb,OACA,yBAAKG,UAAWC,IAAEQ,SACbZ,EAAMY,U,wCCqCTC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAfL,SAAChB,GACpB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACdC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBAAiBe,YAAY,wBAE1C,6BACI,6CAQDC,EArDC,SAAC1B,GACb,IAAI2B,EAAQ3B,EAAM4B,YACdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE9B,GAAIA,GAAI8B,EAAE9B,QACnFgC,EAAkBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAElC,QAclF,OAAKF,EAAMqC,OAGP,6BACI,yBAAKlC,UAAWC,IAAE0B,SACd,yBAAK3B,UAAWC,IAAEkC,cACbT,GAEL,yBAAK1B,UAAWC,IAAE+B,UACd,6BACKD,GAEL,kBAACnB,EAAD,CAAqBG,SAhBjB,SAACqB,GACjBvC,EAAMwC,YAAYD,EAAOE,sBAGH,kBAAC,IAAD,CAAUlC,GAAI,Y,wCCtBxCmC,EAA6B,SAACf,GAAD,MAAY,CACzCU,OAAQV,EAAMgB,KAAKN,S,OCkBRO,sBACXC,aAlBkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACkB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAmBN,UDNR,SAACO,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKlD,MAAMqC,OAET,kBAACW,EAAcE,KAAKlD,OAFI,kBAAC,IAAD,CAAUO,GAAG,eAHT,GACX4C,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAoCI,KCK9DL,CAMVlB","file":"static/js/4.90dce7e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3S5UI\",\"dialogsItems\":\"Dialogs_dialogsItems__1Suy7\",\"active\":\"Dialogs_active__3B_oZ\",\"dialog\":\"Dialogs_dialog__1uW6x\",\"messages\":\"Dialogs_messages__-ngCg\",\"message\":\"Dialogs_message__3N02E\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\"+ props.id\r\n    return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>\r\n            <img src=\"https://infoznaki.ru/wa-data/public/shop/products/75/09/975/images/7038/7038.970.png\" alt=\"\"/>\r\n            {props.name}\r\n        </NavLink>\r\n    </div>)\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n    <div className={s.message}>\r\n        {props.message}\r\n        </div>\r\n    )         \r\n}\r\n\r\n\r\nexport default Message","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage\r\n    let dialogsElement = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n    let messagesElement = state.messages.map(m => <Message message={m.message} key={m.id} />)\r\n    // let newMessageBody = state.newMessageBody\r\n\r\n    // let OnSendMessageClick = () => {\r\n    //     props.sendMessage()\r\n    // }\r\n    // let onNewMessageChange = (e) => {\r\n    //     let body = e.target.value\r\n    //     props.updateNewMessageBody(body)\r\n    // }\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElement}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>\r\n                        {messagesElement}\r\n                    </div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst maxLength50 = maxLengthCreator(50)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                    validate={[required, maxLength50]}\r\n                    name=\"newMessageBody\" placeholder=\"enter your message\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        },\r\n        // updateNewMessageBody: (body) => {\r\n        //     dispatch(updateNewMessageBodyCreator(body))\r\n        // }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        mapDispatchToProps\r\n    ),\r\n    withAuthRedirect\r\n)\r\n    (Dialogs)\r\n\r\n"],"sourceRoot":""}